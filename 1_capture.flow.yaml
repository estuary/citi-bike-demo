# Endpoints from which collections are captured.
endpoints:
  # Source-of-truth database for station definitions.
  demo/upstream/db:
    postgres:
      host: demo-upstream-db
      user: postgres
      password: postgres
  # S3 location into which near-realtime ride data is delivered.
  demo/s3/rides-drop:
    s3:
      bucket: demo-citi-rides

# Captures bind a data source endpoint to an ingested collection.
captures:
  # Watch S3 file drop for new rides.
  - endpoint: { name: demo/s3/rides-drop }
    target: { name: demo/citi-bike/rides }
  # Capture station attributes from an upstream, system-of-record table.
  - endpoint:
      name: demo/upstream/db
      config:
        table: station_attributes
    target: { name: demo/citi-bike/rides }

collections:
  demo/citi-bike/station-attributes:
    schema: schemas/station.schema.yaml
    key: [/station_id]

  demo/citi-bike/rides:
    schema: schemas/ride.schema.yaml
    key: [/bike_id, /begin/timestamp]
    # Define projections that map CSV headers into document locations.
    projections:
      bikeid: /bike_id
      birth year: /birth_year
      end station id: /end/station_id
      start station id: /begin/station_id
      starttime: /begin/timestamp
      stoptime: /end/timestamp
      usertype: /user_type
